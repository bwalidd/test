version: '3.8'

services:
  postgres:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - REDIRECT_URI=${REDIRECT_URI}

  frontend:
    build: ./front
    ports:
      - "8080:8080"
    volumes:
      - ./front:/usr/src/app
      - /usr/src/app/node_modules
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=${NODE_ENV}

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    volumes:
      - ./front:/usr/share/nginx/html
    ports:
      - "8004:80"
    depends_on:
      - frontend

volumes:
  postgres_data:
  redis_data:
